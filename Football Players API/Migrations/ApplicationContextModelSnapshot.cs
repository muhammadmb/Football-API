// <auto-generated />
using System;
using Football_Players_API.AppContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Football_Players_API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Football_Players_API.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateOfAdd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfUpdate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("IsDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTitles")
                        .HasColumnType("int");

                    b.Property<int>("SquadSize")
                        .HasColumnType("int");

                    b.Property<string>("Stadium")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-abcd-000000000000"),
                            Country = "Egypt",
                            DateOfAdd = new DateTimeOffset(new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Founded = new DateTime(1907, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "https://upload.wikimedia.org/wikipedia/en/thumb/8/8c/Al_Ahly_SC_logo.png/130px-Al_Ahly_SC_logo.png",
                            Name = "Al Ahly Sporting Club",
                            NumberOfTitles = 107,
                            SquadSize = 30,
                            Stadium = "El-Ahly Stadium"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-abcd-000000000001"),
                            Country = "England",
                            DateOfAdd = new DateTimeOffset(new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Founded = new DateTime(1886, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "https://upload.wikimedia.org/wikipedia/en/thumb/5/53/Arsenal_FC.svg/160px-Arsenal_FC.svg.png",
                            Name = "The Arsenal Football Club",
                            NumberOfTitles = 55,
                            SquadSize = 30,
                            Stadium = "Emirates Stadium"
                        });
                });

            modelBuilder.Entity("Football_Players_API.Entities.ClubPlayer", b =>
                {
                    b.Property<Guid>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfContractEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoin")
                        .HasColumnType("datetime2");

                    b.HasKey("ClubId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("ClubPlayers");
                });

            modelBuilder.Entity("Football_Players_API.Entities.NationalTeam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateOfAdd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DateOfUpdate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("IsDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTitles")
                        .HasColumnType("int");

                    b.Property<int>("SquadSize")
                        .HasColumnType("int");

                    b.Property<string>("Stadium")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NationalTeams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-abcd-000000000002"),
                            DateOfAdd = new DateTimeOffset(new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Founded = new DateTime(1900, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "https://upload.wikimedia.org/wikipedia/en/thumb/5/53/Arsenal_FC.svg/160px-Arsenal_FC.svg.png",
                            Name = "Egyption national team",
                            NumberOfTitles = 9,
                            SquadSize = 30,
                            Stadium = "Cairo Stadium"
                        });
                });

            modelBuilder.Entity("Football_Players_API.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateOfAdd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("DateOfUpdate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Goals")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("IsDeleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NationalTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pictrue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NationalTeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Assists = 120,
                            Citizenship = "Egyption",
                            DateOfAdd = new DateTimeOffset(new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            DateOfBirth = new DateTime(1977, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Muhammad",
                            Goals = 140,
                            Height = "185 cm",
                            LastName = "Abou trika",
                            NationalTeamId = new Guid("00000000-0000-0000-abcd-000000000002"),
                            Number = "22",
                            Pictrue = "https://3.bp.blogspot.com/-ktPnakamJXA/WIAHa0EvRaI/AAAAAAAAjmM/06w8jIgFP4UcmJQMfSOvYD10bHVNMUdoACLcB/s1600/Abou%2BTrika.jpg",
                            Position = "AMF"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Assists = 100,
                            Citizenship = "Egyption",
                            DateOfAdd = new DateTimeOffset(new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            DateOfBirth = new DateTime(1976, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Muhammad",
                            Goals = 80,
                            Height = "175 cm",
                            LastName = "barakat",
                            NationalTeamId = new Guid("00000000-0000-0000-abcd-000000000002"),
                            Number = "11",
                            Pictrue = "https://cdn.arageek.com/magazine/2017/09/Mohamed-Barakat-1.jpg",
                            Position = "RW"
                        });
                });

            modelBuilder.Entity("Football_Players_API.Entities.ClubPlayer", b =>
                {
                    b.HasOne("Football_Players_API.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Football_Players_API.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Football_Players_API.Entities.Player", b =>
                {
                    b.HasOne("Football_Players_API.Entities.NationalTeam", "NationalTeam")
                        .WithMany("Players")
                        .HasForeignKey("NationalTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NationalTeam");
                });

            modelBuilder.Entity("Football_Players_API.Entities.NationalTeam", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
